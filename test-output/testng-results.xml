<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="63" started-at="2021-04-27T23:16:33Z" finished-at="2021-04-27T23:16:33Z">
    <groups>
      <group name="smoke">
        <method signature="Testing2.EditUser()[pri:2, instance:selenium.Testing2@23ceabc1]" name="EditUser" class="selenium.Testing2"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Testing2.EditUser()[pri:2, instance:selenium.Testing2@23ceabc1]" name="EditUser" class="selenium.Testing2"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Test" duration-ms="63" started-at="2021-04-27T23:16:33Z" finished-at="2021-04-27T23:16:33Z">
      <class name="selenium.Testing2">
        <test-method status="FAIL" signature="createUser()[pri:1, instance:selenium.Testing2@23ceabc1]" name="createUser" duration-ms="4" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at selenium.Testing2.createUser(Testing2.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method status="SKIP" signature="EditUser()[pri:2, instance:selenium.Testing2@23ceabc1]" name="EditUser" duration-ms="0" started-at="2021-04-27T19:16:33Z" depends-on-methods="selenium.Testing2.createUser" finished-at="2021-04-27T19:16:33Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing2.EditUser()[pri:2, instance:selenium.Testing2@23ceabc1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing2.EditUser()[pri:2, instance:selenium.Testing2@23ceabc1] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditUser -->
        <test-method status="PASS" signature="deleteUser()[pri:3, instance:selenium.Testing2@23ceabc1]" name="deleteUser" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- selenium.Testing2 -->
      <class name="selenium.Testing1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:selenium.Testing1@5dfcfece]" name="beforeSuite" is-config="true" duration-ms="7" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:selenium.Testing1@5dfcfece]" name="test1" duration-ms="6" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:selenium.Testing1@5dfcfece]" name="test2" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:selenium.Testing1@5dfcfece]" name="test3" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test4()[pri:0, instance:selenium.Testing1@5dfcfece]" name="test4" duration-ms="1" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@5dfcfece]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:selenium.Testing1@5dfcfece]" name="afterSuite" is-config="true" duration-ms="2" started-at="2021-04-27T19:16:33Z" finished-at="2021-04-27T19:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Testing1 -->
      <class name="selenium.ParameterizedTest">
        <test-method status="PASS" signature="createUser(java.lang.String, java.lang.String)[pri:0, instance:selenium.ParameterizedTest@56f4468b]" name="createUser" duration-ms="2" started-at="2021-04-27T19:16:33Z" data-provider="getData" finished-at="2021-04-27T19:16:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method status="PASS" signature="createUser(java.lang.String, java.lang.String)[pri:0, instance:selenium.ParameterizedTest@56f4468b]" name="createUser" duration-ms="1" started-at="2021-04-27T19:16:33Z" data-provider="getData" finished-at="2021-04-27T19:16:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method status="PASS" signature="createUser(java.lang.String, java.lang.String)[pri:0, instance:selenium.ParameterizedTest@56f4468b]" name="createUser" duration-ms="1" started-at="2021-04-27T19:16:33Z" data-provider="getData" finished-at="2021-04-27T19:16:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
      </class> <!-- selenium.ParameterizedTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
